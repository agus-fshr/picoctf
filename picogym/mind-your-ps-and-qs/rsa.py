'''Decrypt my super sick RSA:
c: 8533139361076999596208540806559574687666062896040360148742851107661304651861689
n: 769457290801263793712740792519696786147248001937382943813345728685422050738403253
e: 65537
'''
import binascii

c = 8533139361076999596208540806559574687666062896040360148742851107661304651861689

n = 769457290801263793712740792519696786147248001937382943813345728685422050738403253
#obtain P and Q as n=pq using factordb
p = 1617549722683965197900599011412144490161
q = 475693130177488446807040098678772442581573

totient = (p-1)*(q-1)

e = 65537
d = pow(e, -1, totient) #d is the modular inverse multiplicative of e (mod totient(n))

#now decode!
#c^d mod n = m
m = pow(c, d, n)

#m is a number related to the decrpyted message
message = binascii.unhexlify(hex(m)[2:]).decode()
print(f"message: {message}")
